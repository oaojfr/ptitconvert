name: New commit, new build !

on:
  workflow_dispatch:
  push:
    branches:
      - '**'
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

permissions:
  contents: write

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-macos-arm64:
    runs-on: macos-15
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install Python deps
        run: |
          python -m pip install -U pip
          python -m pip install -r requirements.txt pyinstaller
      - name: Build backend binary
        run: python scripts/build_backend.py
      - name: Install Electron deps
        run: |
          cd electron
          npm install --no-audit --no-fund
      - name: Build mac app (arm64)
        run: |
          cd electron
          npm run build:mac:arm64
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mac-dist-arm64
          path: electron/dist/**

  build-macos-x64:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install Python deps
        run: |
          python -m pip install -U pip
          python -m pip install -r requirements.txt pyinstaller
      - name: Build backend binary
        run: python scripts/build_backend.py
      - name: Install Electron deps
        run: |
          cd electron
          npm install --no-audit --no-fund
      - name: Build mac app (x64)
        run: |
          cd electron
          npm run build:mac:x64
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mac-dist-x64
          path: electron/dist/**

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install Python deps
        run: |
          python -m pip install -U pip
          python -m pip install -r requirements.txt pyinstaller
      - name: Build backend binary
        run: python scripts/build_backend.py
      - name: Install Electron deps
        run: |
          cd electron
          npm install --no-audit --no-fund
      - name: Build Windows app
        run: |
          cd electron
          npm run build:win
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: win-dist
          path: electron/dist/**

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install Python deps
        run: |
          python -m pip install -U pip
          python -m pip install -r requirements.txt pyinstaller
      - name: Build backend binary
        run: python scripts/build_backend.py
      - name: Install Electron deps
        run: |
          cd electron
          npm install --no-audit --no-fund
      - name: Build Linux app
        run: |
          cd electron
          npm run build:linux
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-dist
          path: electron/dist/**

  release:
    if: github.event_name == 'push' && (startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main')
    needs: [build-macos-arm64, build-macos-x64, build-windows, build-linux]
    runs-on: ubuntu-latest
    steps:
      - name: Prepare release metadata
        id: meta
        shell: bash
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            TAG_NAME="${GITHUB_REF##*/}"
            RELEASE_NAME="$TAG_NAME"
          else
            TAG_NAME="main-${GITHUB_RUN_NUMBER}"
            RELEASE_NAME="main build #${GITHUB_RUN_NUMBER}"
          fi
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "release_name=$RELEASE_NAME" >> $GITHUB_OUTPUT
          echo "ref=${GITHUB_SHA}" >> $GITHUB_OUTPUT
      - name: Download mac arm64 artifacts
        uses: actions/download-artifact@v4
        with:
          name: mac-dist-arm64
          path: mac-dist-arm64
      - name: Download mac x64 artifacts
        uses: actions/download-artifact@v4
        with:
          name: mac-dist-x64
          path: mac-dist-x64
      - name: Download win artifacts
        uses: actions/download-artifact@v4
        with:
          name: win-dist
          path: win-dist
      - name: Download linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: linux-dist
          path: linux-dist
      - name: Collect installers and checksums
        shell: bash
        run: |
          set -euo pipefail
          MAC_ARM64_INST=$(ls mac-dist-arm64/*.dmg 2>/dev/null | head -n1 || true)
          MAC_X64_INST=$(ls mac-dist-x64/*.dmg 2>/dev/null | head -n1 || true)
          WIN_INST=$(ls win-dist/*.exe 2>/dev/null | head -n1 || true)
          LINUX_INST=$(ls linux-dist/*.AppImage 2>/dev/null | head -n1 || true)
          echo "Mac arm64: $MAC_ARM64_INST" || true
          echo "Mac x64:   $MAC_X64_INST" || true
          echo "Win:   $WIN_INST" || true
          echo "Linux: $LINUX_INST" || true
          : > checksums.txt
          if [[ -n "$MAC_ARM64_INST" ]]; then shasum -a 256 "$MAC_ARM64_INST" >> checksums.txt; fi
          if [[ -n "$MAC_X64_INST" ]]; then shasum -a 256 "$MAC_X64_INST" >> checksums.txt; fi
          if [[ -n "$WIN_INST" ]]; then shasum -a 256 "$WIN_INST" >> checksums.txt; fi
          if [[ -n "$LINUX_INST" ]]; then shasum -a 256 "$LINUX_INST" >> checksums.txt; fi
      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.meta.outputs.tag_name }}
          name: ${{ steps.meta.outputs.release_name }}
          target_commitish: ${{ steps.meta.outputs.ref }}
          prerelease: ${{ !startsWith(github.ref, 'refs/tags/') }}
          generate_release_notes: true
          files: |
            mac-dist-arm64/*.dmg
            mac-dist-x64/*.dmg
            win-dist/*.exe
            linux-dist/*.AppImage
            checksums.txt
